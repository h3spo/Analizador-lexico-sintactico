
       IDENTIFICADOR DE TOKENS

        | Identificador_________________|Num token |
        -------------------------------------------|
        |Palabras reservadas____________|500_______|
        |variables    __________________|110_______|
        |CADENAS------------------------|101-------|
        |enter -------------------------|1---------|


        |numero-------------------------|102-------|
        |numero decimal-----------------|103-------|
        |ala n -------------------------|104-------|
        |ala -n-------------------------|105-------|


        -------------OPeradores aritmeticos--------
        |+------------------------------|120-------|
        |- -----------------------------|121-------|
        |*------------------------------|122-------|
        |/------------------------------|123-------|


        -----OPERARADORES RELACIONALES--------------
        |<------------------------------|130--------|
        |<=-----------------------------|131--------|
        |>------------------------------|132--------|
        |>=-----------------------------|133--------|
        |<>-----------------------------|134--------|
        |=------------------------------|135--------|

        --------IGUALACION--------------------------
        |:------------------------------|140--------|
        |:=-----------------------------|141--------|


        ---------AGRUPADORES------------------------|
        |(------------------------------|150--------|
        |)------------------------------|151--------|

        ----------SIMBOLOS---------------------------
        |,------------------------------|160--------|
        |;------------------------------|161--------|
        |:------------------------------|162--------|

        ---------COMENTARIOS-------------------------
        |'ASCCI-------------------------|170--------|

        ----------RESERVADAS-------------------------
        |Identificador__________________|num token---|
        |started------------------------|500---------|
        |vare---------------------------|501---------|
        |inter--------------------------|502---------|
        |decim--------------------------|503---------|
        |text---------------------------|504---------|
        |procedure----------------------|505---------|
        |st_procedure-------------------|506---------|
        |istrue-------------------------|507---------|
        |st_istrue----------------------|508---------|
        |fn_istrue----------------------|509---------|
        |else---------------------------|510---------|
        |st_else------------------------|511---------|
        |fn_else------------------------|512---------|
        |function-----------------------|513---------|
        |during-------------------------|514---------|
        |st_during----------------------|515---------|
        |fn_during----------------------|516---------|
        |write_input--------------------|517---------|
        |read_outpu--------------------|518---------|
        |Increases----------------------|519----------|
        |decrease-----------------------|520----------|


        




        REAGLAS PARA EL ANASIS DE  DE SINTAXIS 


        Reglas
        
varaible = {(vare) (:)  (inter|decim|text) (varaible) (;)}
finish


Ciclo while = { (during) (expresion) (preposicion) (finish) (;) }
finish

condicional if = (istrue) "(" (expresion) (st_istrue) (preposicion)* (fn_istrue) [(else)  (preposicion) (}) (finish) ] }
finish

write Line = { (write_input)(cadena|variable) (;) }
finish

read line = { (write output) (cadena | variable) (;)}
finish

Incremento = { (Increases) (variable) (;) }
finish

Decremento = { (decrease) (variable) (;) }
finish

llamada al metodo = { (function)(varaible) "(" (variable)* ")"(;) }
finish


metodo= { (procedure)(variable)"("(()variable(,)*)* ")"(st_procedure)(proposicion)*(finish)(;)}
*hasta proposicion

preposicon= { (igualacion)|(cond if)(else)|ciclo while)|(read line)| write line)|(inc-dec)|(llamada metodo) }

expresion = {(exp-simple)(operadores)(ep-simple)[y ,or]*}

expresion simple ={"(" (exp-simple) ")" [+|-|*|/] |(exp-simple) (operacion)[+|-|*|/](expresion-simple)}

cuerpo-principal={ (started)(varaible)(declaracion)(metodo)*(started)(preposicion)*(ended)(term) }
*hasta metodo
 #Jesus fabiel Partida camacho


igulacion  = (varaible) (:|:=) (varaible) o numero o LETRA 


















        ERROR 300 = FALTA " AL FINAL DE LA CADENA [CADENA INCOOMPLETA]
        ERROR 301 = NUMERO + . + LETRA 
        ERROR 302 = IDENTIFICADOR  LETRA + != LETRA O DIGITO

         #Revision agregar la e
         #cada palabra reservda debe tener un componente diferente

         ---------------------ERROR DE SINTAXIS--------------------------------------------------------------------------
         |NUMERO DE ERROR--|DESCRIPCION----------------------------------------------------------------------------------
         |1000             |fallo el incio del codigo no se inicio correctamente
         

        

        */

        variable = variable + varaible + numero / numero;
        varaible =variable ((numero * numero)/varaible)

        if((algo / algo) > algo  ) 